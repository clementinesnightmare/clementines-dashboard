{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","providerOptions","injected","walletconnect","package","WalletConnectProvider","options","infuraId","web3Modal","Web3Modal","network","cacheProvider","clearCachedProvider","connectFailed","updateAccount","Screen","styled","div","image","SpacerSmall","SpacerMedium","Container","flex","fd","jc","ai","test","TextDescription","p","StyledConnect","button","StyledWallet","StyledVault","ResponsiveWrapper","StyledLogo","img","App","useDispatch","useSelector","useState","feedback","setFeedback","currentView","setCurrentView","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","VAULT_ADDRESS","ULTRA_LEGENDS","LEGENDS","RARES","METADATA","CONFIG","SET_CONFIG","walletData","setWalletData","loadWallet","walletOfOwner","to","from","then","receipt","length","prepWalletData","fullData","i","idx","parseInt","metadata","push","id","url","replace","name","color","nftColor","map","item","style","border","margin","backgroundColor","borderRadius","includes","alt","src","width","height","borderTopRightRadius","borderTopLeftRadius","controls","padding","getData","getConfig","fetch","headers","Accept","configResponse","json","config","useEffect","textAlign","onClick","e","preventDefault","abiResponse","abi","connect","provider","Web3EthContract","setProvider","Web3","eth","getAccounts","accounts","net","getId","SmartContractObj","on","window","location","reload","flexFlow","maxWidth","disabled","lineHeight","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.07734a2b.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      // let cost = await store\n      //   .getState()\n      //   .blockchain.smartContract.methods.cost()\n      //   .call();\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          // cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchData } from \"../data/dataActions\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport Web3Modal from \"web3modal\";\n\nconst providerOptions = {\n  injected: {},\n  walletconnect: {\n    package: WalletConnectProvider,\n    options: {\n      infuraId: \"0c6e3e7c585042f9aac96f45d526b95e\"\n    }\n  }\n};\n\nconst web3Modal = new Web3Modal({\n  network: \"mainnet\",\n  cacheProvider: false,\n  providerOptions,\n});\nweb3Modal.clearCachedProvider();\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n\n    const provider = await web3Modal.connect();\n\n    const CONFIG = await configResponse.json();\n    if (provider) {\n      Web3EthContract.setProvider(provider);\n      let web3 = new Web3(provider);\n      try {\n        const accounts = await web3.eth.getAccounts();\n        const networkId = await web3.eth.net.getId();\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          provider.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          provider.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        console.log(err)\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--primary);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 22px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 16px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\n\nexport const StyledConnect = styled.button`\n  width: 250px;\n  height: 62px;\n  cursor: pointer;\n  background-color: transparent;\n  background-repeat: no-repeat;\n  border: none;\n  outline: none;\n  background-image:url('config/images/connect.png');\n`;\n\nexport const StyledWallet = styled.button`\n  width: 250px;\n  height: 62px;\n  cursor: pointer;\n  background-color: transparent;\n  background-repeat: no-repeat;\n  border: none;\n  outline: none;\n  background-image:url('config/images/wallet.png');\n  margin: 5px;\n`;\n\nexport const StyledVault = styled.button`\n  width: 250px;\n  height: 62px;\n  cursor: pointer;\n  background-color: transparent;\n  background-repeat: no-repeat;\n  border: none;\n  outline: none;\n  background-image:url('config/images/vault.png');\n  margin: 5px;\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 350px;\n  max-width: 100%;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [feedback, setFeedback] = useState(``);\n  const [currentView, setCurrentView] = useState(``)\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n    VAULT_ADDRESS: \"\",\n    ULTRA_LEGENDS: [],\n    LEGENDS: [],\n    RARES: [],\n    METADATA: [],\n  });\n  const [walletData, setWalletData] = useState([]);\n\n  const loadWallet = () => {\n    setCurrentView(`wallet`)\n    setFeedback(`Loading your wallet...`);\n    setWalletData(``);\n    blockchain.smartContract.methods\n      .walletOfOwner(blockchain.account)\n      .call({\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(\n          `Welcome to the Neighborhood ` + blockchain.account + `!`\n        );\n        setWalletData(\n          receipt.length > 0 ? prepWalletData(receipt) : (\n            <p>You have no Clementine's Nightmare NFTs in this wallet.</p>\n          )\n        );\n      });\n  };\n\n  const loadVault = () => {\n    setCurrentView(`vault`)\n    setFeedback(`Loading vault...`)\n    setWalletData(``)\n\n    blockchain.smartContract.methods\n      .walletOfOwner(CONFIG.VAULT_ADDRESS)\n      .call({\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(\n          `Welcome to the Clementine's Nightmare Community Vault!`\n        );\n        setWalletData(\n          receipt.length > 0 ? prepWalletData(receipt) : (\n            <p>There are no Clementine's Nightmare NFTs in the vault.</p>\n          )\n        );\n      });\n  };\n\n  const prepWalletData = (receipt) => {\n    let fullData = []\n\n    for (let i = 0; i < receipt.length; i++) {\n      let idx = parseInt(receipt[i], 10)\n      let metadata = CONFIG.METADATA[idx]\n\n      fullData.push({\n        id: idx,\n        url: metadata.image.replace(\"ipfs://\", \"https://clementinesnightmare.mypinata.cloud/ipfs/\"),\n        name: metadata.name,\n        color: nftColor(idx),\n      })\n    }\n\n    return fullData.map((item) =>\n      <div key={item.id} style={{\n        border: \"3px solid var(--primary)\",\n        margin: \"10px\",\n        backgroundColor: \"var(--primary)\",\n        borderRadius: 15,\n      }}>\n        {item.url.includes(\".png\") ? (\n          <img alt={item.name} src={item.url} width=\"250px\" height=\"250px\" style={{\n            borderTopRightRadius: 15,\n            borderTopLeftRadius: 15,\n          }} />) : (\n          <video width=\"250\" height=\"250\" alt={item.name} style={{\n            borderTopRightRadius: 15,\n            borderTopLeftRadius: 15,\n          }} controls=\"true\">\n            <source src={item.url} type=\"video/mp4\" />\n            Your browser does not support the video tag.\n          </video>\n        )}\n        <p style={{\n          padding: \"5px\",\n          color: item.color,\n        }}>{item.name}</p>\n      </div>\n    );\n  }\n\n  const nftColor = (idx) => {\n    let val = \"var(--primary-text)\"\n\n    if (CONFIG.ULTRA_LEGENDS.includes(idx)) {\n      return \"var(--ultra-text)\"\n    }\n\n    if (CONFIG.LEGENDS.includes(idx)) {\n      return \"var(--legend-text)\"\n    }\n\n    if (CONFIG.RARES.includes(idx)) {\n      return \"var(--rare-text)\"\n    }\n\n    return val\n  }\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n      loadWallet();\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  return (\n    <s.Screen>\n      <s.Container\n        flex={1}\n        ai={\"center\"}\n        style={{ padding: 24, backgroundColor: \"var(--primary)\" }}\n        image={CONFIG.SHOW_BACKGROUND ? \"/config/images/bg.png\" : null}\n      >\n        <ResponsiveWrapper flex={1}>\n          <s.Container\n            flex={2}\n            jc={\"center\"}\n            ai={\"center\"}\n          >\n            <StyledLogo alt={\"logo\"} src={\"/config/images/logo.png\"} />\n            <>\n              <s.SpacerSmall />\n              {blockchain.account === \"\" ||\n                blockchain.smartContract === null ? (\n                <s.Container ai={\"center\"} jc={\"center\"}>\n                  <s.TextDescription\n                    style={{\n                      textAlign: \"center\",\n                      color: \"var(--accent-text)\",\n                    }}\n                  >\n                    Connect to {CONFIG.NETWORK.NAME}.\n                  </s.TextDescription>\n                  <s.SpacerSmall />\n                  <StyledConnect\n                    onClick={(e) => {\n                      e.preventDefault();\n                      dispatch(connect());\n                      getData();\n                    }}\n                  > </StyledConnect>\n                  {blockchain.errorMsg !== \"\" ? (\n                    <>\n                      <s.SpacerSmall />\n                      <s.TextDescription\n                        style={{\n                          textAlign: \"center\",\n                          color: \"var(--accent-text)\",\n                        }}\n                      >\n                        {blockchain.errorMsg}\n                      </s.TextDescription>\n                    </>\n                  ) : null}\n                </s.Container>\n              ) : (\n                <>\n                  <s.Container style={{\n                    flexFlow: \"row wrap\",\n                    maxWidth: \"1200px\",\n                    textAlign: \"center\",\n                    color: \"var(--accent-text)\",\n                  }} ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                    <StyledWallet\n                      disabled={currentView == 'wallet' ? 1 : 0}\n                      onClick={(e) => {\n                        e.preventDefault();\n                        loadWallet();\n                      }}\n                    />\n                    <StyledVault\n                      disabled={currentView == 'vault' ? 1 : 0}\n                      onClick={(e) => {\n                        e.preventDefault();\n                        loadVault();\n                      }}\n                    />\n                  </s.Container>\n                  <s.SpacerSmall />\n                  <s.TextDescription\n                    style={{\n                      textAlign: \"center\",\n                      color: \"var(--accent-text)\",\n                    }}\n                  >\n                    {feedback}\n                  </s.TextDescription>\n                  <s.SpacerSmall />\n                  <s.Container style={{\n                    flexFlow: \"row wrap\",\n                    maxWidth: \"1200px\",\n                    textAlign: \"center\",\n                    color: \"var(--accent-text)\",\n                  }} ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                    {walletData}\n                  </s.Container>\n                </>\n              )}\n            </>\n            <s.SpacerMedium />\n          </s.Container>\n        </ResponsiveWrapper>\n        <s.SpacerMedium />\n        <s.TextDescription\n          style={{\n            textAlign: \"center\",\n            color: \"var(--accent-text)\",\n            lineHeight: \"1.2em\",\n          }}\n        >\n          COPYRIGHT &copy; 2021/2022.<br />\n          ALL RIGHTS RESERVED BY PIXELATED INK\n        </s.TextDescription>\n      </s.Container>\n    </s.Screen>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}